{"version":3,"sources":["utils/duration/index.js","pomodoro/Session.js","pomodoro/DurationButtons.js","pomodoro/TimerControls.js","utils/class-names/index.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","concat","Session","_ref","session","displayDuration","updatedFont","isTimerRunning","React","createElement","className","data-testid","label","givenSeconds","seconds","round","secondsToDuration","timeRemaining","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","DurationButtons","focusDuration","breakDuration","focusDecreaseHandler","focusIncreaseHandler","breakDecreaseHandler","breakIncreaseHandler","type","onClick","disabled","TimerControls","classNameToBoolean","playPause","handleStopSession","aria-label","title","oi","Object","entries","reduce","classes","_ref2","_slicedToArray","value","undefined","filter","join","nextTick","prevState","max","_objectSpread","Pomodoro","time","_useState","useState","_useState2","setIsTimerRunning","_useState3","_useState4","setSession","_useState5","_useState6","setFocusDuration","_useState7","_useState8","setBreakDuration","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","nextState","prevStateSession","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4442a527.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\"\n\nfunction Session({ session, displayDuration, updatedFont, isTimerRunning }) {\n  return (session && (\n    <div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n\n          <h2 data-testid=\"session-title\">\n            {session?.label} for{\" \"}\n            {minutesToDuration(displayDuration(session?.label))} minutes\n          </h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(session?.timeRemaining)} remaining\n          </p>\n          <h2>\n              {!isTimerRunning && <h2>Paused</h2>}\n          </h2>\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={updatedFont}\n              style={{ width: `${updatedFont}%` }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ));\n}\n\nexport default Session;","import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction DurationButtons({\n  session,\n  focusDuration,\n  breakDuration,\n  focusDecreaseHandler,\n  focusIncreaseHandler,\n  breakDecreaseHandler,\n  breakIncreaseHandler,\n}) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\n            Focus Duration: {minutesToDuration(focusDuration)}\n          </span>\n          <div className=\"input-group-append\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"decrease-focus\"\n              onClick={focusDecreaseHandler}\n              disabled={session}\n            >\n              <span className=\"oi oi-minus\" />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"increase-focus\"\n              onClick={focusIncreaseHandler}\n              disabled={session}\n            >\n              <span className=\"oi oi-plus\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div className=\"float-right\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\n              Break Duration: {minutesToDuration(breakDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-break\"\n                onClick={breakDecreaseHandler}\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-break\"\n                onClick={breakIncreaseHandler}\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DurationButtons","import React from \"react\";\nimport classNames from \"../utils/class-names\";\n\nfunction TimerControls({\n  session,\n  playPause,\n  isTimerRunning,\n  handleStopSession,\n}) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className=\"btn-group btn-group-lg mb-2\"\n          role=\"group\"\n          aria-label=\"Timer controls\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-testid=\"play-pause\"\n            title=\"Start or pause timer\"\n            onClick={playPause}\n          >\n            <span\n              className={classNames({\n                oi: true,\n                \"oi-media-play\": !isTimerRunning,\n                \"oi-media-pause\": isTimerRunning,\n              })}\n            />\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            data-testid=\"stop\"\n            title=\"Stop the session\"\n            onClick={handleStopSession}\n            disabled={!session}\n          >\n            <span className=\"oi oi-media-stop\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimerControls;","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport Session from \"./Session\";\nimport DurationButtons from \"./DurationButtons\";\nimport TimerControls from \"./TimerControls\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  \nconst focusDecreaseHandler = () => {\n    if (focusDuration > 5) setFocusDuration(focusDuration - 5);\n  };\n\n  const focusIncreaseHandler = () => {\n    if (focusDuration < 60) setFocusDuration(focusDuration + 5);\n  };\n\n  const breakDecreaseHandler = () => {\n    if (breakDuration > 1) {\n      setBreakDuration(breakDuration - 1);\n    }\n  };\n\n  const breakIncreaseHandler = () => {\n    if (breakDuration < 15) {\n      setBreakDuration(breakDuration + 1);\n    }\n  };\n  //Stop Button\n  \n  const handleStopSession = () => {\n    setIsTimerRunning(false);\n    setSession(null);\n  };\n  \n  //Changes the display of title\n  const displayDuration = (label) => {\n    if (label === \"Focusing\") {\n      return focusDuration;\n    } else return breakDuration;\n  };\n  \n  const updateFont = (time, label) => {\n    return 100 - (time / (displayDuration(label) * 60)) * 100;\n  };\n  \n  const updatedFont = updateFont(session?.timeRemaining, session?.label);\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <DurationButtons\n        session={session}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        focusDecreaseHandler={focusDecreaseHandler}\n        focusIncreaseHandler={focusIncreaseHandler}\n        breakDecreaseHandler={breakDecreaseHandler}\n        breakIncreaseHandler={breakIncreaseHandler}\n      />\n      <TimerControls\n        playPause={playPause}\n        isTimerRunning={isTimerRunning}\n        handleStopSession={handleStopSession}\n        session={session}\n      />\n      <Session\n        session={session}\n        updatedFont={updatedFont}\n        displayDuration={displayDuration}\n        isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}